on:
  push:
    branches:
    - master
  pull_request:

name: x

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
      with:
        components: clippy, rustfmt
    - run: cargo fmt --all -- --check
    - run: cargo clippy --workspace --examples --tests --all-features -- -D warnings
    - run: cargo test

  #
  # Build x for all platforms
  #

  build:
    strategy:
      matrix:
        host: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.host }}
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
    - run: cargo install --path xbuild --root .
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.host }}-x
        path: bin/x${{ matrix.host == 'windows-latest' && '.exe' || '' }}

  #
  # Build template
  #

  build-template:
    if: github.event_name != 'pull_request' && github.repository_owner == 'cloudpeers'
    strategy:
      fail-fast: false
      matrix:
        x:
        - host: ubuntu-latest
          platform: linux
          arch: x64
          opt: debug
          tar: true
          ext: .AppDir

        - host: ubuntu-latest
          platform: linux
          arch: x64
          opt: release
          tar: false
          ext: .AppImage

        # TODO: macos -> linux
        # TODO: windows -> linux

        - host: ubuntu-latest
          platform: macos
          arch: x64
          opt: debug
          tar: true
          ext: .app
        - host: ubuntu-latest
          platform: macos
          arch: x64
          opt: release
          tar: false
          ext: .dmg
        - host: macos-latest
          platform: macos
          arch: x64
          opt: debug
          tar: true
          ext: .app
        - host: macos-latest
          platform: macos
          arch: x64
          opt: release
          tar: false
          ext: .dmg

        # TODO: windows -> macos

        - host: ubuntu-latest
          platform: windows
          arch: x64
          opt: debug
          tar: false
          ext: .msix
        - host: ubuntu-latest
          platform: windows
          arch: x64
          opt: release
          tar: false
          ext: .msix
        - host: macos-latest
          platform: windows
          arch: x64
          opt: debug
          tar: false
          ext: .msix
        - host: macos-latest
          platform: windows
          arch: x64
          opt: release
          tar: false
          ext: .msix
        - host: windows-latest
          platform: windows
          arch: x64
          opt: debug
          tar: false
          ext: .msix
        - host: windows-latest
          platform: windows
          arch: x64
          opt: release
          tar: false
          ext: .msix

        - host: ubuntu-latest
          platform: android
          arch: arm64
          opt: debug
          tar: false
          ext: .apk
        - host: ubuntu-latest
          platform: android
          arch: arm64
          opt: release
          tar: false
          ext: .apk
        - host: macos-latest
          platform: android
          arch: arm64
          opt: debug
          tar: false
          ext: .apk
        - host: macos-latest
          platform: android
          arch: arm64
          opt: release
          tar: false
          ext: .apk
        - host: windows-latest
          platform: android
          arch: arm64
          opt: debug
          tar: false
          ext: .apk
        - host: windows-latest
          platform: android
          arch: arm64
          opt: release
          tar: false
          ext: .apk

        - host: ubuntu-latest
          platform: ios
          arch: arm64
          opt: debug
          tar: true
          ext: .app
        - host: ubuntu-latest
          platform: ios
          arch: arm64
          opt: release
          tar: true
          ext: .app
        - host: macos-latest
          platform: ios
          arch: arm64
          opt: debug
          tar: true
          ext: .app
        - host: macos-latest
          platform: ios
          arch: arm64
          opt: release
          tar: true
          ext: .app
        - host: windows-latest
          platform: ios
          arch: arm64
          opt: debug
          tar: true
          ext: .app
        - host: windows-latest
          platform: ios
          arch: arm64
          opt: release
          tar: true
          ext: .app

    runs-on: ${{ matrix.x.host }}
    needs: build
    steps:
    - name: fetch sources
      uses: actions/checkout@v2

    - name: install rust
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable

    - name: install x
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.host }}-x
    - run: chmod +x ./x
      if: ${{ matrix.x.host == 'ubuntu-latest' || matrix.x.host == 'macos-latest' }}

    - name: install llvm
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: 13
    - run: sudo ln -s llvm-ar-13 /usr/bin/llvm-ar
    - run: sudo ln -s llvm-ar-13 /usr/bin/llvm-lib
    - run: sudo ln -s lld-link-13 /usr/bin/lld-link
    - run: sudo ln -s lld-13 /usr/local/bin/lld

    - name: install java
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11

    - name: install linux dependencies
      if: ${{ matrix.x.host == 'ubuntu-latest' }}
      run: sudo apt-get update && sudo apt-get install libgtk-3-dev squashfs-tools

    - name: create project
      run: x new template

    - name: build project
      run: ../x build --platform ${{ matrix.x.platform }} --arch ${{ matrix.x.arch }} --${{ matrix.x.opt }}
      working-directory: template
      env:
        X_PEM: ${{ secrets.X_PEM }}
        X_PROVISIONING_PROFILE: ${{ secrets.X_PROVISIONING_PROFILE }}

    - name: tar artifact
      if: ${{ matrix.x.tar }}
      run: ${{ matrix.x.host == 'macos-latest' && 'g' || '' }}tar --zstd -cf template${{ matrix.x.ext }}.tar.zst template${{ matrix.x.ext }}
      working-directory: template/target/x/${{ matrix.x.opt }}/${{ matrix.x.platform }}/${{ matrix.x.arch }}

    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.x.host }}-${{ matrix.x.platform }}-${{ matrix.x.arch }}-${{ matrix.x.opt }}-template
        path: template/target/x/${{ matrix.x.opt }}/${{ matrix.x.platform }}/${{ matrix.x.arch }}/template${{ matrix.x.ext }}${{ matrix.x.tar && '.tar.zst' || '' }}
