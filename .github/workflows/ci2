on:
  push:
    branches:
    - master
  pull_request:

name: x

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
      with:
        components: clippy, rustfmt
    - run: cargo fmt --all -- --check
    #- run: cargo clippy --workspace --examples --tests --all-features -- -D warnings

  build:
    strategy:
      fail-fast: false
      matrix:
        host: [ubuntu-latest]
    runs-on: ${{ matrix.host }}
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
    - run: cargo install --path xcli --root .
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.host }}-x
        path: bin/x

  build-linux-x64-debug:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        host: [ubuntu-latest]
    runs-on: ${{ matrix.host }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.host }}-x
    - run: sudo apt-get update && sudo apt-get install libgtk-3-dev
    - uses: hecrj/setup-rust-action@v1
      with:
        targets: x86_64-unknown-linux-gnu
    - uses: subosito/flutter-action@v1
    - run: ./x build -p helloworld --platform linux --arch x64

  build-linux-x64-release:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        host: [ubuntu-latest]
    runs-on: ${{ matrix.host }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.host }}-x
    - run: sudo apt-get update && sudo apt-get install libgtk-3-dev
    - uses: hecrj/setup-rust-action@v1
      with:
        targets: x86_64-unknown-linux-gnu
    - uses: subosito/flutter-action@v1
    - run: ./x build -p helloworld --platform linux --arch x64 --release

  build-macos-x64-debug:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        host: [ubuntu-latest]
    runs-on: ${{ matrix.host }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.host }}-x
    - uses: hecrj/setup-rust-action@v1
      with:
        targets: x86_64-apple-darwin
    - uses: subosito/flutter-action@v1
    - run: ./x build -p helloworld --platform macos --arch x64

  # TODO: build-macos-x64-release

  build-windows-x64-debug:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        host: [ubuntu-latest]
    runs-on: ${{ matrix.host }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.host }}-x
    - uses: hecrj/setup-rust-action@v1
      with:
        targets: x86_64-pc-windows-msvc
    - uses: subosito/flutter-action@v1
    - run: ./x build -p helloworld --platform windows --arch x64

  # TODO: build-windows-x64-release

  build-android-arm64-debug:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        host: [ubuntu-latest]
    runs-on: ${{ matrix.host }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.host }}-x
    - uses: hecrj/setup-rust-action@v1
      with:
        targets: aarch64-linux-android
    - uses: subosito/flutter-action@v1
    - run: ./x build -p helloworld --platform android --arch arm64

  build-android-arm64-release:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        host: [ubuntu-latest]
    runs-on: ${{ matrix.host }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.host }}-x
    - uses: hecrj/setup-rust-action@v1
      with:
        targets: aarch64-linux-android
    - uses: subosito/flutter-action@v1
    - run: ./x build -p helloworld --platform android --arch arm64 --release

  # TODO: build-ios-arm64-debug
  # TODO: build-ios-arm64-release
